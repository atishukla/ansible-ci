---
# We need sudo for some of the Docker commands.
sudo: required

env:
  # Provide a list of OSes we want to use for testing.
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

# Tell Travis to start Docker when it brings up an environment.
services:
  - docker

before_install:
  # Pull the image from Docker Hub for the OS under test.
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
# Start the container from the image and perform tests.
  - container_id=$(mktemp)

  # Run container detached, with our role mounted inside.
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/ansible-ci:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm
    ansible-playbook /etc/ansible/roles/ansible-ci/tests/test.yaml --syntax-check

  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm
    ansible-galaxy install geerlingguy.java

  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm
    ansible-playbook /etc/ansible/roles/ansible-ci/tests/test.yaml

# Run the role/playbook again, checking to make sure it's idempotent.
  - idempotence=$(mktemp)

  - >
    docker exec "$(cat ${container_id})"
    ansible-playbook /etc/ansible/roles/ansible-ci/tests/test.yaml
    | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

   # Ensure Java is installed.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm which java'